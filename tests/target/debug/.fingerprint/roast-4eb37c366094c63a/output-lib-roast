{"$message_type":"diagnostic","message":"unused import: `signer`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/matyaskozar/Code/Thesis/roast/src/coordinator.rs","byte_start":738,"byte_end":744,"line_start":23,"line_end":23,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"use crate::{signer, threshold_scheme::ThresholdScheme};","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/matyaskozar/Code/Thesis/roast/src/coordinator.rs","byte_start":738,"byte_end":746,"line_start":23,"line_end":23,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"use crate::{signer, threshold_scheme::ThresholdScheme};","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/matyaskozar/Code/Thesis/roast/src/coordinator.rs","byte_start":737,"byte_end":738,"line_start":23,"line_end":23,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use crate::{signer, threshold_scheme::ThresholdScheme};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/Users/matyaskozar/Code/Thesis/roast/src/coordinator.rs","byte_start":779,"byte_end":780,"line_start":23,"line_end":23,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"use crate::{signer, threshold_scheme::ThresholdScheme};","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `signer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/matyaskozar/Code/Thesis/roast/src/coordinator.rs:23:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{signer, threshold_scheme::ThresholdScheme};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"fields `threshold_scheme`, `joint_key`, and `my_index` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/matyaskozar/Code/Thesis/roast/src/signer.rs","byte_start":436,"byte_end":447,"line_start":14,"line_end":14,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"pub struct RoastSigner<'a, S: ThresholdScheme<K>, K: Clone> {","highlight_start":12,"highlight_end":23}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/matyaskozar/Code/Thesis/roast/src/signer.rs","byte_start":491,"byte_end":507,"line_start":15,"line_end":15,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    threshold_scheme: S,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/matyaskozar/Code/Thesis/roast/src/signer.rs","byte_start":516,"byte_end":525,"line_start":16,"line_end":16,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    joint_key: K,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/matyaskozar/Code/Thesis/roast/src/signer.rs","byte_start":534,"byte_end":542,"line_start":17,"line_end":17,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    my_index: Identifier,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `threshold_scheme`, `joint_key`, and `my_index` are never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/matyaskozar/Code/Thesis/roast/src/signer.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RoastSigner<'a, S: ThresholdScheme<K>, K: Clone> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    threshold_scheme: S,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    joint_key: K,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    my_index: Identifier,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"call to `.clone()` on a reference in this situation does nothing","code":{"code":"noop_method_call","explanation":null},"level":"warning","spans":[{"file_name":"/Users/matyaskozar/Code/Thesis/roast/src/signer.rs","byte_start":3321,"byte_end":3329,"line_start":87,"line_end":87,"column_start":96,"column_end":104,"is_primary":true,"text":[{"text":"         let signing_package = frost_ed25519::SigningPackage::new(commitments_map, self.message.clone());","highlight_start":96,"highlight_end":104}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type `[u8]` does not implement `Clone`, so calling `clone` on `&[u8]` copies the reference, which does not do anything and can be removed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(noop_method_call)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this redundant call","code":null,"level":"help","spans":[{"file_name":"/Users/matyaskozar/Code/Thesis/roast/src/signer.rs","byte_start":3321,"byte_end":3329,"line_start":87,"line_end":87,"column_start":96,"column_end":104,"is_primary":true,"text":[{"text":"         let signing_package = frost_ed25519::SigningPackage::new(commitments_map, self.message.clone());","highlight_start":96,"highlight_end":104}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: call to `.clone()` on a reference in this situation does nothing\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/matyaskozar/Code/Thesis/roast/src/signer.rs:87:96\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m         let signing_package = frost_ed25519::SigningPackage::new(commitments_map, self.message.clone());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove this redundant call\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the type `[u8]` does not implement `Clone`, so calling `clone` on `&[u8]` copies the reference, which does not do anything and can be removed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(noop_method_call)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"3 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 3 warnings emitted\u001b[0m\n\n"}
